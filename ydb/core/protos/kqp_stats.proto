syntax = "proto3";
option cc_enable_arenas = true;

package NKqpProto;
option java_package = "ru.yandex.kikimr.proto";

import "ydb/library/yql/dq/actors/protos/dq_stats.proto";

message TKqpStatsCompile {
    bool FromCache = 1;
    uint64 DurationUs = 2;
    uint64 CpuTimeUs = 3;
}

// Per datashard table extra stats
message TKqpShardTableExtraStats {
    uint64 ShardId = 1;
    uint64 ShardCpuTimeUs = 2;
}

// aggregated shard extra stats for table
message TKqpShardTableAggrExtraStats {
    uint32 AffectedShards = 1;
    NYql.NDqProto.TDqStatsAggr ShardCpuTimeUs = 2;
}

// aggregated read actor extra stats for table
message TKqpReadActorTableAggrExtraStats {
    repeated uint64 AffectedShards = 1;
}

message TKqpScanTableExtraStats {
    // IScan stats
    uint64 IScanStartTimeMs = 1;     // start IScan timestamp
    uint64 IScanFinishTimeMs = 2;    // finish IScan timestamp
    uint64 IScanCpuTimeUs = 3;       // IScan::Feed time
    uint64 IScanWaitTimeUs = 4;      // wait for row inside IScan object
    uint64 IScanPageFaults = 5;      // IScan page faults count

    // Network stats
    uint64 Messages = 6;
    uint64 MessagesByPageFault = 7;
}

// extra for NYql.NDqProto.TDqComputeActorStats
message TKqpComputeActorExtraStats {
}

// extra for NYql.NDqProto.TDqStageStats
message TKqpStageExtraStats {
    repeated NYql.NDqProto.TDqTaskStats DatashardTasks = 1;
};

// extra for NYql.NDqProto.TDqExecutionStats
message TKqpExecutionExtraStats {
    // Basic stats
    uint32 AffectedShards = 1;
    NYql.NDqProto.TDqStatsAggr ComputeCpuTimeUs = 2;   // compute actors time
    NYql.NDqProto.TDqStatsAggr ShardsCpuTimeUs = 3;    // datashards time

    // Profile stats
    uint64 ResolveCpuTimeUs = 100;
    uint64 ResolveWallTimeUs = 101;
}

message TKqpStatsQuery {
    // Basic stats
    uint64 DurationUs = 1;
    TKqpStatsCompile Compilation = 2;

    reserved 3; // repeated TKqpStatsExecution Executions = 3;

    uint64 WorkerCpuTimeUs = 4;
    uint64 ReadSetsCount = 5;
    uint64 MaxShardProgramSize = 6;
    uint64 MaxShardReplySize = 7;

    repeated NYql.NDqProto.TDqExecutionStats Executions = 8;
}
